import{_ as n,o as t,c as l,R as a,k as s,a as i}from"./chunks/framework.S8W019Nk.js";const p="/assets/dep-conflict.teazGH0s.jpg",h="/assets/build-process.ZlPNvC7Q.jpg",x=JSON.parse('{"title":"依赖和构建管理","description":"","frontmatter":{},"headers":[],"relativePath":"backend/maven/manage.md","filePath":"backend/maven/manage.md"}'),e={name:"backend/maven/manage.md"},k=a("",7),r=s("p",null,[s("span",{hl:""},"依赖传递"),i("是指当一个模块（库）A依赖于B，B又依赖于C。那么A会间接依赖于C。这种依赖传递结构可以形成一个依赖树。当引入一个模块时，"),s("span",{hl:""},"Maven"),i("会自动解析、加载其所有的 "),s("span",{hl:""},"直接和间接"),i("依赖，确保这些依赖都可用。")],-1),d=s("p",null,[s("span",{hlbg:""},"依赖传递的作用：")],-1),E=s("ul",null,[s("li",null,"减少重复依赖"),s("li",null,"自动管理依赖"),s("li",null,"确保依赖版本正确性")],-1),g=s("p",null,[s("span",{hl:""},"依赖冲突"),i("是指当 "),s("span",{hl:""},"直接或间接"),i(" 引用出现了相同的模块，项目就会出现重复的"),s("span",{hl:""},"jar包"),i("，此时就发生了依赖冲突。依赖冲突避免出现重复的依赖，并终止依赖传递。")],-1),c=s("p",null,[s("img",{src:p,alt:"image.jpg"})],-1),o=s("p",null,[i("Maven能按照自己的原则进行重复依赖选择，自动解决依赖冲突。也提供了手动解决依赖冲突的方式"),s("span",{hl:""},"（不推荐）"),i("。")],-1),y=s("p",null,[s("strong",null,"解决依赖冲突的方式：")],-1),A=s("ul",null,[s("li",null,[s("p",null,[i("短路优先原则"),s("span",{hl:""},"（第一原则）")]),s("p",null,"A -> B -> C -> D -> X(version: 0.0.1)"),s("p",null,"A -> E -> X(version: 0.0.2)"),s("p",null,"则A依赖于X(version: 0.0.2)")]),s("li",null,[s("p",null,[i("先声明优先原则"),s("span",{hl:""},"（第二原则）")]),s("p",null,"A -> B -> X(version: 0.0.1)"),s("p",null,"A -> C -> X(version: 0.0.2)"),s("p",null,"路径长度相同时，遵循先声明优先原则，则A依赖于X(version: 0.0.1)")])],-1),u=s("h2",{id:"核心功能-构建管理",tabindex:"-1"},[i("核心功能：构建管理 "),s("a",{class:"header-anchor",href:"#核心功能-构建管理","aria-label":'Permalink to "核心功能：构建管理"'},"​")],-1),D=s("p",null,[s("span",{hl:""},"构建"),i("是指将"),s("span",{hl:""},"源代码、依赖库和资源等文件转换成可执行或可部署的应用程序"),i("的过程。在这个过程中包括编译源代码、链接依赖哭、打包和部署等多个步骤。")],-1),_=a("",9),m=[k,r,d,E,g,c,o,y,A,u,D,_];function v(b,F,C,f,j,B){return t(),l("div",null,m)}const P=n(e,[["render",v]]);export{x as __pageData,P as default};
