import{_ as n,o as t,c as l,R as a,k as s,a as i}from"./chunks/framework.S8W019Nk.js";const p="/assets/dep-conflict.teazGH0s.jpg",h="/assets/build-process.ZlPNvC7Q.jpg",x=JSON.parse('{"title":"依赖和构建管理","description":"","frontmatter":{},"headers":[],"relativePath":"backend/maven/manage.md","filePath":"backend/maven/manage.md"}'),e={name:"backend/maven/manage.md"},k=a(`<h1 id="依赖和构建管理" tabindex="-1">依赖和构建管理 <a class="header-anchor" href="#依赖和构建管理" aria-label="Permalink to &quot;依赖和构建管理&quot;">​</a></h1><h2 id="核心功能-依赖管理" tabindex="-1">核心功能：依赖管理 <a class="header-anchor" href="#核心功能-依赖管理" aria-label="Permalink to &quot;核心功能：依赖管理&quot;">​</a></h2><h3 id="依赖添加" tabindex="-1">依赖添加 <a class="header-anchor" href="#依赖添加" aria-label="Permalink to &quot;依赖添加&quot;">​</a></h3><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   通过编写依赖jar包的gav必要属性，引入第三方依赖！</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   scope属性是可选的，可以指定依赖生效范围！</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   依赖信息查询方式：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      1. maven仓库信息官网 https://mvnrepository.com/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      2. mavensearch插件搜索</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 引入具体的依赖包 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;log4j&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;log4j&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.2.17&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!--</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            生效范围</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            - compile ：main目录 test目录  打包打包 [默认]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            - provided：main目录 test目录  Servlet</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            - runtime： 打包运行           MySQL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            - test:    test目录           junit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;runtime&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="提取依赖版本" tabindex="-1">提取依赖版本 <a class="header-anchor" href="#提取依赖版本" aria-label="Permalink to &quot;提取依赖版本&quot;">​</a></h3><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--声明版本--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!--命名随便,内部制定版本号即可！--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">junit.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;4.11&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">junit.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 也可以通过 maven规定的固定的key，配置maven的参数！如下配置编码格式！--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project.build.sourceEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project.build.sourceEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project.reporting.outputEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project.reporting.outputEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;junit&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;junit&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--引用properties声明版本 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${junit.version}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="依赖传递和冲突" tabindex="-1">依赖传递和冲突 <a class="header-anchor" href="#依赖传递和冲突" aria-label="Permalink to &quot;依赖传递和冲突&quot;">​</a></h3>`,7),r=s("p",null,[s("span",{hl:""},"依赖传递"),i("是指当一个模块（库）A依赖于B，B又依赖于C。那么A会间接依赖于C。这种依赖传递结构可以形成一个依赖树。当引入一个模块时，"),s("span",{hl:""},"Maven"),i("会自动解析、加载其所有的 "),s("span",{hl:""},"直接和间接"),i("依赖，确保这些依赖都可用。")],-1),d=s("p",null,[s("span",{hlbg:""},"依赖传递的作用：")],-1),E=s("ul",null,[s("li",null,"减少重复依赖"),s("li",null,"自动管理依赖"),s("li",null,"确保依赖版本正确性")],-1),g=s("p",null,[s("span",{hl:""},"依赖冲突"),i("是指当 "),s("span",{hl:""},"直接或间接"),i(" 引用出现了相同的模块，项目就会出现重复的"),s("span",{hl:""},"jar包"),i("，此时就发生了依赖冲突。依赖冲突避免出现重复的依赖，并终止依赖传递。")],-1),c=s("p",null,[s("img",{src:p,alt:"image.jpg"})],-1),o=s("p",null,[i("Maven能按照自己的原则进行重复依赖选择，自动解决依赖冲突。也提供了手动解决依赖冲突的方式"),s("span",{hl:""},"（不推荐）"),i("。")],-1),y=s("p",null,[s("strong",null,"解决依赖冲突的方式：")],-1),A=s("ul",null,[s("li",null,[s("p",null,[i("短路优先原则"),s("span",{hl:""},"（第一原则）")]),s("p",null,"A -> B -> C -> D -> X(version: 0.0.1)"),s("p",null,"A -> E -> X(version: 0.0.2)"),s("p",null,"则A依赖于X(version: 0.0.2)")]),s("li",null,[s("p",null,[i("先声明优先原则"),s("span",{hl:""},"（第二原则）")]),s("p",null,"A -> B -> X(version: 0.0.1)"),s("p",null,"A -> C -> X(version: 0.0.2)"),s("p",null,"路径长度相同时，遵循先声明优先原则，则A依赖于X(version: 0.0.1)")])],-1),u=s("h2",{id:"核心功能-构建管理",tabindex:"-1"},[i("核心功能：构建管理 "),s("a",{class:"header-anchor",href:"#核心功能-构建管理","aria-label":'Permalink to "核心功能：构建管理"'},"​")],-1),D=s("p",null,[s("span",{hl:""},"构建"),i("是指将"),s("span",{hl:""},"源代码、依赖库和资源等文件转换成可执行或可部署的应用程序"),i("的过程。在这个过程中包括编译源代码、链接依赖哭、打包和部署等多个步骤。")],-1),_=a('<p><img src="'+h+`" alt="image.jpg"></p><p><strong>主动触发构建的场景：</strong></p><ul><li>重新编译</li><li>打包</li><li>部署本地或私仓</li></ul><p><strong>命令方式构建：</strong></p><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>mvn clean</td><td>清理编译或打包后的项目结构，删除target文件夹</td></tr><tr><td>mvn compile</td><td>编译项目，生成target文件夹</td></tr><tr><td>mvn test</td><td>执行测试源码</td></tr><tr><td>mvn site</td><td>生成一个项目依赖信息的展示页面</td></tr><tr><td>mvn package</td><td>打包项目，生成jar/war文件</td></tr><tr><td>mvn install</td><td>打包后上传到本地仓库</td></tr><tr><td>mvn deploy</td><td>打包后上传到私仓</td></tr></tbody></table><p><strong>构建命令周期：</strong></p><ol><li><p>清理周期 clean</p></li><li><p>默认周期 compile -&gt; test -&gt; package -&gt; install / deploy</p></li><li><p>报告周期 site</p></li></ol><p><strong>最佳使用方案：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 本地部署</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div>`,9),m=[k,r,d,E,g,c,o,y,A,u,D,_];function v(b,F,C,f,j,B){return t(),l("div",null,m)}const P=n(e,[["render",v]]);export{x as __pageData,P as default};
