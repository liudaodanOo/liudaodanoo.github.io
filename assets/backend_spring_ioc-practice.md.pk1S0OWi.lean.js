import{_ as n,o as t,c as l,R as a,k as s,a as i}from"./chunks/framework.S8W019Nk.js";const h="/assets/ioc-autowired.1qWIAWuC.jpg",x=JSON.parse('{"title":"实践和应用","description":"","frontmatter":{},"headers":[],"relativePath":"backend/spring/ioc-practice.md","filePath":"backend/spring/ioc-practice.md"}'),p={name:"backend/spring/ioc-practice.md"},k=a("",6),e=s("p",null,[i("给"),s("strong",null,"ApplicationContext"),i("构造函数提供配置信息的"),s("span",{hl:""},"位置路径"),i("，允许容器从外部资源加载配置元数据。")],-1),E=a("",13),r=s("p",null,[i("文件路径："),s("span",{hl:""},"resources/spring-ioc.xml")],-1),d=a("",1),g=s("p",null,[s("span",{hlbg:""},"bean标签通过配置告诉IOC容器需要创建对象的组件信息：")],-1),o=s("ul",null,[s("li",null,"id：bean的唯一标识，用于获取bean"),s("li",null,"class：组件类的全限定名"),s("li",null,"factory-bean： 工厂bean的名称"),s("li",null,[i("factory-method：实例工厂的方法名。"),s("span",{hl:""},"静态工厂时，必须是静态方法；指定工厂bean时，必须是非静态方法。")])],-1),c=a("",30),y=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"注解"),s("th",null,"作用")])]),s("tbody",null,[s("tr",null,[s("td",null,"@PostConstruct"),s("td",null,[i("指定初始化方法，必须是 "),s("span",{hl:""},"public void 无形参")])]),s("tr",null,[s("td",null,"@PreDestroy"),s("td",null,[i("指定销毁方法，必须是 "),s("span",{hl:""},"public void 无形参")])])])],-1),F=a("",9),u=s("p",null,[i("a. 声明外部配置"),s("span",{hl:""},"application.properties"),i("文件")],-1),D=a("",12),A=[k,e,E,r,d,g,o,c,y,F,u,D];function C(b,m,B,q,v,_){return t(),l("div",null,A)}const f=n(p,[["render",C]]);export{x as __pageData,f as default};
